# Generated by Django 5.2.6 on 2025-09-24 15:57

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('hospital', 'Hospital'), ('health_worker', 'Health Worker'), ('admin', 'Admin')], default='health_worker', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('mission', 'Mission'), ('referral', 'Referral'), ('dispensary', 'Dispensary'), ('health_center', 'Health Center')], max_length=50)),
                ('county', models.CharField(max_length=50)),
                ('sub_county', models.CharField(max_length=100)),
                ('ward', models.CharField(max_length=100)),
                ('address', models.TextField(blank=True)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hospital_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HealthWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('doctor', 'Doctor'), ('nurse', 'Nurse'), ('midwife', 'Midwife'), ('obstetrician', 'Obstetrician'), ('lab_technician', 'Lab Technician'), ('pharmacist', 'Pharmacist'), ('other', 'Other')], max_length=50)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('available_days', models.CharField(max_length=255)),
                ('shift_hours', models.CharField(max_length=100)),
                ('is_approved', models.BooleanField(default=False)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='health_worker_profile', to=settings.AUTH_USER_MODEL)),
                ('hospitals', models.ManyToManyField(related_name='health_workers', to='hospital.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='ANCService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic_days', models.CharField(help_text='e.g. Mon, Wed, Fri', max_length=255)),
                ('operating_hours', models.CharField(help_text='e.g. 8am - 4pm', max_length=100)),
                ('capacity_per_day', models.IntegerField(blank=True, null=True)),
                ('ultrasound_available', models.BooleanField(default=False)),
                ('lab_available', models.BooleanField(default=False)),
                ('pharmacy_available', models.BooleanField(default=False)),
                ('emergency_services', models.BooleanField(default=False)),
                ('blood_bank', models.BooleanField(default=False)),
                ('insurance_accepted', models.CharField(max_length=255)),
                ('avg_wait_time_minutes', models.IntegerField(blank=True, null=True)),
                ('hospital', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='anc_service', to='hospital.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='ANCRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodname', models.DateField()),
                ('cervical_cancer', models.IntegerField(default=0)),
                ('iron_folate_supplements', models.IntegerField(default=0)),
                ('iron_supplements', models.IntegerField(default=0)),
                ('folic_supplements', models.IntegerField(default=0)),
                ('preg_adol_15_19_first_anc', models.IntegerField(default=0)),
                ('completed_4anc', models.IntegerField(default=0)),
                ('re_visit_anc_clients', models.IntegerField(default=0)),
                ('ipt_3rd_dose', models.IntegerField(default=0)),
                ('first_anc_before_12_weeks', models.IntegerField(default=0)),
                ('completed_8anc', models.IntegerField(default=0)),
                ('fgm_complications', models.IntegerField(default=0)),
                ('preg_youth_20_24', models.IntegerField(default=0)),
                ('breast_cancer_screened', models.IntegerField(default=0)),
                ('cervical_cancer_screened', models.IntegerField(default=0)),
                ('new_anc_clients', models.IntegerField(default=0)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anc_records', to='hospital.hospital')),
            ],
        ),
    ]
